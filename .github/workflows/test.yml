name: Test ActiveRecord postgis adapter
on:
  pull_request:
  push:
    branches-ignore:
      - gh-pages
  schedule:
    - cron: "0 7 * * SUN"

env:
  BUNDLE_GEMFILE: gemfiles/ar60.gemfile

jobs:
  postgres-10:
    # Linux environment required for service containers
    runs-on: ubuntu-latest
    container:
      image: ubuntu:latest
    # Use the https://hub.docker.com/r/postgis/postgis containers
    # via https://github.com/postgis/docker-postgis
    services:
      postgres:
        image: postgis/postgis:10-3.0
        env:
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    continue-on-error: ${{ matrix.ok-to-fail }}

    strategy:
      matrix:
        ruby: [2.5, 2.6, 2.7]
        ok-to-fail: [false]
        include:
          - ruby: jruby-9.2.9.0
            ok-to-fail: true

    steps:
      - uses: actions/checkout@v2

      - name: setup ruby ${{ matrix.ruby }}
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby }}
          bundler-cache: true # runs 'bundle install' and caches installed gems automatically

      - run: bundle exec rake test
        env:
          POSTGRES_HOST: localhost
          POSTGRES_PORT: ${{ job.services.postgres.ports[5432] }} # get randomly assigned published port

  postgres-9-6:
    # Linux environment required for service containers
    runs-on: ubuntu-latest
    container:
      image: ubuntu:latest
    services:
      postgres:
        image: postgis/postgis:9.6-3.0
        env:
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    strategy:
      matrix:
        ruby: [2.7]

    steps:
      - uses: actions/checkout@v2

      - name: setup ruby ${{ matrix.ruby }}
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby }}
          bundler-cache: true # runs 'bundle install' and caches installed gems automatically

      - run: bundle exec rake test
        env:
          POSTGRES_HOST: localhost
          POSTGRES_PORT: ${{ job.services.postgres.ports[5432] }} # get randomly assigned published port

  postgres-11:
    # Linux environment required for service containers
    runs-on: ubuntu-latest
    container:
      image: ubuntu:latest
    services:
      postgres:
        image: postgis/postgis:11-3.0
        env:
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    strategy:
      matrix:
        ruby: [2.7]

    steps:
      - uses: actions/checkout@v2

      - name: setup ruby ${{ matrix.ruby }}
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby }}
          bundler-cache: true # runs 'bundle install' and caches installed gems automatically

      - run: bundle exec rake test
        env:
          POSTGRES_HOST: localhost
          POSTGRES_PORT: ${{ job.services.postgres.ports[5432] }} # get randomly assigned published port

  postgres-12:
    # Linux environment required for service containers
    runs-on: ubuntu-latest
    container:
      image: ubuntu:latest
    services:
      postgres:
        image: postgis/postgis:12-3.0
        env:
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    strategy:
      matrix:
        ruby: [2.7]

    steps:
      - uses: actions/checkout@v2

      - name: setup ruby ${{ matrix.ruby }}
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby }}
          bundler-cache: true # runs 'bundle install' and caches installed gems automatically

      - run: bundle exec rake test
        env:
          POSTGRES_HOST: localhost
          POSTGRES_PORT: ${{ job.services.postgres.ports[5432] }} # get randomly assigned published port
